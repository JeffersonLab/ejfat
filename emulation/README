// Test setup for EJFAT emulation:

(parameter defaults on rhs of =)

-------------
Data Source:
-------------

tx=$(mktemp); cat <file> | pktzr_md -s <mtu_size> -i <destination ip> -p <destination port=19522> -t <tick=1> -d <data_id=1> [-e -v] 2> $tx

e.g.,

tx=$(mktemp); cat <file> | pktzr_md -i 129.57.29.231  2> $tx

where 'cat <file>' represents anything that wil give pktzr_md something to read from stdin.

the session log is in $tx

NOTE: defaults to IPV4; to use IPV6 include a -6 flag in the invocation

Usage: 
        -6 Use IPV6 
        -i <destination address>  
        -p <destination port>  
        -t <tick>  
        -d <data_id>  
        -e Use LB port entropy  
        -v verbose mode (default is quiet)  
        -s <max packet size> (default 9000)  
        -h help 

Required: -i

-------------
LB emulation:
-------------

tx=$(mktemp); lb_emu -i "<Listen ip>" -p <Listen port> -t "<destination ip>" -r <destination port> 2> $tx

the session log is in $tx

e.g.,

tx=$(mktemp); lb_emu -i "129.57.29.231" -p 19522 -t "129.57.29.232" -r 7777 2> $tx

NOTE: defaults to IPV4; to use IPV6 include an -6 flag in the invocation

Usage: 
        -6 Use IPV6 
        -i <destination address>  
        -p <destination port>  
        -t <send address>  
        -r <send base port>  
        -e num base port entropy bits (0) 
        -v verbose mode (default is quiet)  
        -h help 

Required: -i -p -t -r

-e <n> specifies n bits of destination port entropy for distributing data_id streams among destination ports numbered upwards from base port.

-------------
Data Sink:
-------------

tx=$(mktemp); lb_rcv -i "<Listen ip>" -p <Listen port>  >  <file> 2> $tx

e.g.,

tx=$(mktemp); lb_rcv -i "129.57.29.232" -p 7777 > some_file_name 2> $tx

NOTE: defaults to IPV4; to use IPV6 include an -6 flag in the invocation

Send to network server:

tx=$(mktemp); lb_rcv  -i "<Listen ip>" -p <Listen port>  2> $tx


Note that stderr is being redirected to temp file $tx (in /tmp) and contains the session log

Usage: 
        -6 Use IPV6 
        -i <destination address>  
        -p <destination port>  
        -w write packets immediately without sequence checking/buffering 
        -m inhibit reassembly - only metadata logging - conflicts with -w 
        -v verbose mode (default is quiet)  
        -h help 

Required: -i -p


Capabilities / Limitations (Bugs) / Next Steps:
- supports both IPV4 and IPV6
- lb_emu currently routes traffic to a single destination, but will use port entropy
- lb_rcv only supports contiguous events (ticks) at this time.
- lb_rcv suports up to 100 concurrent data_ids each with as many as 1000 out-of-order packets pending output per data_id..




